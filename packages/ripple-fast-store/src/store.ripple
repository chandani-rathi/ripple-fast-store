import { createContext, effect, track } from 'ripple';
import { createStore } from 'zustand/vanilla';

export function createTrackedStore(initialState) {
	const store = createStore(initialState);

	return fn => tracedState(fn, store);
}

function tracedState(fn, store) {
	const currentState = store.getState();
	const returnSlice = fn(currentState);

	if (typeof returnSlice == 'function') {
		return returnSlice;
	}

	const trackedSlice = track(() => {
		return returnSlice;
	});

	effect(() => {
		return store.subscribe(newState => {
			console.log('State changed:', newState);
			const newSlice = fn(newState);
			console.log(newSlice);
			@trackedSlice = newSlice;
		});
	});

	return trackedSlice;
}